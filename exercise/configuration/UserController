package com.example.demo.controller;

import com.example.demo.entity.Student;
import com.example.demo.service.UserService;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.jdbc.datasource.DataSourceTransactionManager;
import org.springframework.transaction.TransactionDefinition;
import org.springframework.transaction.TransactionStatus;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.annotation.sql.DataSourceDefinition;
import java.io.File;
import java.io.IOException;
import java.util.UUID;

/**
 * @author 26568
 * @date 2023-12-04 19:22
 */
@RestController
@RequestMapping("/user")
@Slf4j
public class UserController {
   @Autowired
    private UserService userService;
   @Autowired
    private DataSourceTransactionManager manager;
   @Autowired
    private TransactionDefinition definition;
   @Transactional
   @RequestMapping("/del")
    public int del(Integer id) {
       if (id == null || id < 0) {
           return 0;
       }
       // 业务操作  删除用户
       int resoult = userService.del(id);
       System.out.println("删除操作已经执行");
       int s = 10 / 0;
       return resoult;
   }
   @Value("${server.port}")
   private String port;
   @Autowired
   private Student student;
   @RequestMapping("/exercise")
    public Object getPort() {
       return "server.port:"+port+"  Student.name:"+student.getName()+student.getId();
   }
   @RequestMapping("/day")
   public void day() {
       log.trace("I am trace");
       log.debug("I am debug");
       log.info("I am info");
       log.warn("I am warn");
       log.error("I am error");
   }
   @RequestMapping("/number")
    public Object num(String name) {
       return "获取到的参数是:"+name;
   }
   @RequestMapping("/num2")
    public Object num2(@RequestParam(value = "name",required = false) String creatime) {
       return "获取到的参数是:"+creatime;
   }
   @RequestMapping("/student")
    public Object getStudent(@RequestBody Student student) {
       return student;
   }
   @RequestMapping("/input/{name}/{id}")
    public Object getInput(@PathVariable String name,@PathVariable int id) {
       return "name:"+name+"id:"+id;
   }
   @RequestMapping("/myupload")
    public Object upload(@RequestPart("haiyang")MultipartFile file) {
       String fileName = UUID.randomUUID()+
               file.getOriginalFilename().substring(file.getOriginalFilename().lastIndexOf("."));
       File save = new File("D:\\Data\\"+fileName);
       try {
           file.transferTo(save);
           return  true;
       } catch (IOException e) {
           e.printStackTrace();
       }
       return false;
   }
}
