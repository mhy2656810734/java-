class Solution {
    public int lenLongestFibSubseq(int[] arr) {
        Map<Integer,Integer> hash = new HashMap<>();
        for (int i = 0; i < arr.length;i++) {
            hash.put(arr[i],i);
        }
        int ret = 2;
        int n = arr.length;
        int[][] dp = new int[n][n];
        for (int i = 0; i < n;i++) {
            for (int j = 0; j < n;j++) {
                dp[i][j] = 2;
            }
        }
        for (int j = 2; j < n;j++) {
            for (int i = 1; i < j;i++) {
                int a = arr[j] - arr[i];
                if (a < arr[i] && hash.containsKey(a)) {
                    dp[i][j] = dp[hash.get(a)][i] + 1;
                    ret = Math.max(ret,dp[i][j]);
                }
            }
        }
        return ret == 2?0:ret;
    }
} 
