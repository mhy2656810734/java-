class Solution {
    public int[][] flag = {{1,0},{-1,0},{0,-1},{0,1}};
    public int old,n,m;
    public int[][] floodFill(int[][] image, int sr, int sc, int color) {
        if (image[sr][sc] == color) return image;
        n = image.length;
        m = image[0].length;
        old = image[sr][sc];
        dfs(image,sr,sc,color);
        return image;
    }
    public void dfs(int[][] image,int x,int y,int color) {
        image[x][y] = color;
        for (int i = 0; i < 4;i++) {
            int newX = x + flag[i][0];
            int newY = y + flag[i][1];
            if (newX >= 0 && newX < n && newY >= 0 && newY < m && image[newX][newY] ==  old) {
                 dfs(image,newX,newY,color);
            }
        }
    }
}
