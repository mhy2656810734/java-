class Solution {
    public int countSubstrings(String ss) {
        int n = ss.length();
        if (n == 0) return 0;
        char[] s = ss.toCharArray();
        // 1.创建dp表
        boolean[][] dp = new boolean[n][n];
        //2.初始化
        // 无需初始化
        // 3.填表，从下往上填
        // 最外层确定起点
        for (int i = n-1; i >= 0;i--) {
            // 最里层确定重点
            for (int j = i; j < n;j++) {
                if (s[i] == s[j]) {
                    if (i == j || i+1 == j) {
                        dp[i][j] = true;
                    }else {
                        dp[i][j] = dp[i+1][j-1];
                    }
                } 
            }
        }
        // 4.返回值
        int ret = 0;
        for (int i = 0;i < n;i++) {
            for (int j = 0; j < n;j++) {
                if (dp[i][j]) {
                    ret++;
                }
            }
        }
        return ret;
    }
}
