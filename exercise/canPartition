class Solution {
    public boolean canPartition(int[] nums) {
        int sum = 0;
        for (int x:nums) {
            sum += x;
        }
        if (sum % 2 == 1) return false;
        int n = nums.length;
        int m = sum / 2;
        boolean[][] dp = new boolean[n+1][m+1];
        for (int j = 1; j <= m;j++) {
            dp[0][j] = false;
        }
        for (int i = 0; i <= n;i++) {
            dp[i][0] = true;
        }
        for (int i = 1; i <= n;i++) {
            for (int j = 1; j <= m;j++) {
                dp[i][j] = dp[i-1][j];
                if (j - nums[i-1] >= 0) {
                    dp[i][j] = dp[i][j] || dp[i-1][j-nums[i-1]];
                }
            }
        }
        return dp[n][m];
    }
}
