/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
 // 核心思路: 前后指针法:让cur 指针在前面走，每次遇到相等的就跳过
class Solution {
    public ListNode removeElements(ListNode head, int val) {
        if (head == null) {
            return null;
        }
        ListNode prev = head;
        ListNode cur = head.next;
        while (cur != null) {
            // 相等就跳过
            if (cur.val == val) {
                cur = cur.next;
                prev.next = cur;
            } else {
                // 不相等就链接
                prev = cur;
                cur = cur.next;
            }
        }
        
        if (head.val == val) {
            head = head.next;
        }
        return head;
    }
}
