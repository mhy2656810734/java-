package com.example.demo.config;

import org.springframework.util.DigestUtils;
import org.springframework.util.StringUtils;

import java.nio.charset.StandardCharsets;
import java.util.Scanner;
import java.util.UUID;

/**
 * @author 26568
 * @date 2023-12-06 18:56
 */
public class PasswordTools {
    public static String encrypt(String password) {
        // 1.得到随机盐值
        String salt = UUID.randomUUID().toString().replace("-","");
        // 2.根据随机盐值和密码生成加盐加密的密码
        String finalPassword = DigestUtils.md5DigestAsHex((salt+password).getBytes(StandardCharsets.UTF_8));
        return salt+"$"+finalPassword;
    }
    public static String encrypt(String password,String salt) {
        String finalPawword = DigestUtils.md5DigestAsHex((salt+password).getBytes(StandardCharsets.UTF_8));
        return salt+"$"+finalPawword;
    }
    public static boolean decrypt(String password,String dbPassword) {
        // 先进行参数判定
        if (StringUtils.hasLength(password) && StringUtils.hasLength(dbPassword) &&
                dbPassword.length() == 65 && dbPassword.contains("$")) {
            // 根据 $ 进行分割
            String[] arr = dbPassword.split("\\$");
            String dpassword = encrypt(password,arr[0]);
            if (dpassword.equals(dbPassword)) {
                return  true;
            }
        }
        return false;
    }
    public static void main(String[] args) {
        String password = "123456";
        String dpPassword = encrypt(password);
        Scanner scan = new Scanner(System.in);
        while (true) {
            System.out.println("请输入您要验证的密码");
            String input = scan.next();
            if (decrypt(input,dpPassword)) {
                System.out.println("密码输入正确");
                break;
            } else {
                 System.out.println("密码输入错误!");
            }
        }
    }
}
