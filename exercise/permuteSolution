class Solution {
    public List<List<Integer>> retList;
    public List<Integer> path;
    public boolean[] book;
    public List<List<Integer>> permute(int[] nums) {
        retList = new ArrayList<>();
        path = new ArrayList<>();
        book = new boolean[nums.length];
        dfs(nums);
        return retList;
    }
    public void dfs(int[] nums) {
        if (nums.length == path.size()) {
            retList.add(new ArrayList<>(path));
            return;
        }
        for (int i = 0; i < nums.length;i++) {
            if (book[i] == false) {
                path.add(nums[i]);
                book[i] = true;
                dfs(nums);
                book[i] = false;
                path.remove(path.size() - 1);
            }
        }
    }
}
