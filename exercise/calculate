class Solution {
    public int calculate(String s) {
        // 解题思路：使用双栈或者单栈+变量
        Stack<Integer> stack = new Stack<>();
        char op = '+';// 默认有个+号
        char[] arr = s.toCharArray();
        int i = 0, n = s.length();
        while (i < n) {
            // 先判断当前是字符还是空格/数字
            if (arr[i] == ' ') i++;
            else if (arr[i] >= '0' && arr[i] <= '9') {
                // 统计多位数
                int tmp = 0;
                while(i < n && arr[i] >= '0' && arr[i] <= '9') {
                    tmp = tmp * 10 + (arr[i] - '0');
                    i++;
                }
                // 此时需要将这个数字进行计算然后入栈
                if (op == '+') stack.push(tmp);
                else if (op == '-') stack.push(-tmp);
                else if (op == '*') stack.push(stack.pop() * tmp);
                else stack.push(stack.pop() / tmp);
            } else {
                // 是字符的时候，更新op
                op = arr[i];
                i++;
            }
        }
        // 此时栈里面存的都是数字，直接计算返回结果
        int ret = 0;
        while (!stack.isEmpty()) {
            ret += stack.pop();
        }
        return ret;
    }
}
