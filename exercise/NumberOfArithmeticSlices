class NumberOfArithmeticSlices{
    public int numberOfArithmeticSlices(int[] nums) {
        // 1.状态表示
        // dp[i] 表示以i位置为结尾的全部子数组中等差数组的个数
        // 2.状态转移方程
        // 根据最后一个位置能否和前两个位置构成等差数列划分问题
        // 2.1如果可以构成等差数列
        // dp[i] = dp[i-1] + 1
        // 2.2如果不能构成等差数列
        // dp[i] = 0
        // 3.初始化
        // 要从第三个数开始判断
        // 4.填表顺序
        // 从左到右
        // 5.返回值
        // dp数组和

        int n = nums.length;
        int[] dp = new int[n];
        int sum = 0;
        for (int i = 2;i < n;i++) {
            int a = nums[i];
            int b = nums[i-1];
            int c = nums[i-2];
            dp[i] = a-b == b-c?dp[i-1] + 1 : 0;
            sum += dp[i];
        }
        return sum;
    }
}
