class Solution {
    public int maxProfit(int k, int[] prices) {
        // 题目解析看提交记录
        int n = prices.length;
        int[][] buy = new int[n][k + 1];
        int[][] can = new int[n][k + 1];
        int INF = 0X3F3F3F3F;
        buy[0][0] = -prices[0];
        for (int j = 1; j <= k;j++) {
            buy[0][j] = -INF;
            can[0][j] = -INF;
        }
        for (int i = 1; i < n ;i++) {
            for (int j = 0; j <= k;j++) {
                buy[i][j] = Math.max(buy[i-1][j],can[i-1][j] - prices[i]);
                can[i][j] = can[i-1][j];
                if (j - 1 >= 0) {
                    can[i][j] = Math.max(can[i][j],buy[i-1][j-1] + prices[i]);
                }
            }
        }
        int ret = -INF;
        for (int j = 0; j <= k;j++) {
            ret = Math.max(ret,can[n-1][j]);
        }
        return ret;
    }
}
