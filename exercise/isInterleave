class Solution {
    public boolean isInterleave(String s1, String s2, String s3) {
        int n = s1.length();
        int m = s2.length();
        boolean[][] dp = new boolean[n+1][m+1];
        s1 = " " +s1;
        s2 = " " + s2;
        s3 = " " + s3;
        if ((n + m) != s3.length()-1) return false;
        // 初始化第一行
        for (int j = 0; j <= m;j++) {
            if (s2.charAt(j) == s3.charAt(j)) {
                dp[0][j] = true;
            } else {
                break;
            }
        }
        // 第一列
        for (int i = 0; i <= n;i++) {
            if (s1.charAt(i) == s3.charAt(i)) {
                dp[i][0] = true;
            } else {
                break;
            }
        }
        dp[0][0] = true;
        for (int i = 1; i <= n;i++) {
            for (int j = 1; j <= m;j++) {
                dp[i][j] = (s1.charAt(i) == s3.charAt(i+j)) && dp[i-1][j] ||
                (s2.charAt(j) == s3.charAt(i+j)) && dp[i][j-1];
            }
        }
        return dp[n][m];
    }
}
