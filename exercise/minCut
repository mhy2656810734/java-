class Solution {
    public int minCut(String s) {
        char[] arr = s.toCharArray();
        int n = arr.length;
        boolean[][] hash = new boolean[n][n];
        for (int i = n-1; i >= 0;i--) {
            for (int j = i; j < n;j++) {
                if (arr[i] == arr[j]) {
                    if (i == j || i + 1 == j) {
                        hash[i][j] = true;
                    } else {
                        hash[i][j] = hash[i+1][j-1];
                    }
                } 
            }
        }
        int[] dp = new int[n];
        for (int i = 0; i < n;i++) {
            dp[i] =Integer.MAX_VALUE;
        }
        for (int i = 0; i < n;i++) {
            if (hash[0][i]) {
                dp[i] = 0;
            } else {
                for (int j = 1;j <= i;j++) {
                    if (hash[j][i]) {
                        dp[i] =Math.min(dp[i],dp[j-1] + 1);
                    }
                }
            }
        }
        return dp[n-1];
    }
}
