class Solution {
    public int findTargetSumWays(int[] nums, int target) {
        int sum = 0;
        for (int x:nums) {
            sum += x;
        }
        int m = (sum + target) / 2;
        if (m < 0 || (target + sum) % 2 == 1) return 0;
        int n = nums.length;
        int[][] dp = new int[n+1][m+1];
        dp[0][0] = 1;
        for (int i = 1; i <= n;i++) {
            for (int j = 0; j <= m;j++) {
                dp[i][j] = dp[i-1][j];
                if (j-nums[i-1] >= 0) {
                    dp[i][j] += dp[i-1][j-nums[i-1]];
                }
            }
        }
        return dp[n][m];
    }
}
