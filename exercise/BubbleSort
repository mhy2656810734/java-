package sort;

import java.util.Arrays;
import java.util.concurrent.Callable;
import java.util.concurrent.FutureTask;

/**冒泡排序
 * 时间复杂度:O(N^2)
 * 空间复杂度:O(1)
 * 稳定
 * @author 26568
 * @date 2023-04-04 20:35
 */
class MyCallable implements Callable{
    @Override
    public String call() throws Exception {
        return "hello";
    }
}
public class BubbleSort {
    public static void main(String[] args) {
        int[] arr = {1,6,7,5,9,10,8,2,3};
        bubbleSort(arr);
        System.out.println(Arrays.toString(arr));
        MyCallable callable = new MyCallable();
        FutureTask futureTask = new FutureTask(callable);

    }
    public static void bubbleSort(int[] arr) {
        // 控制趟数
        int len = arr.length;
        boolean flag = true;
        for (int i = 0; i < len-1; i++) {
            // 控制对数
            for (int j = 0; j < len-1-i;j++) {
                if (arr[j] > arr[j+1]) {
                    int temp = arr[j];
                    arr[j] = arr[j+1];
                    arr[j+1] = temp;
                    flag =false;
                }
            }
            // 根据flag判断是否要结束排序
            if (flag) {
                break;
            }
        }
    }
}
