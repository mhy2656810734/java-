package thread;

import java.sql.SQLOutput;
import java.util.*;
import java.util.concurrent.*;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.locks.ReentrantLock;

/**
 *
 * @author 26568
 * @date 2023-01-11 19:27
 */

public class Exercise {
    public static void main(String[] args) throws InterruptedException {
       AtomicInteger integer = new AtomicInteger(0);
       Thread t1 = new Thread(() -> {
           for (int i = 0; i < 50000; i++) {
               integer.getAndIncrement();// 相当于i++操作
           }
       });
        Thread t2 = new Thread(() -> {
            for (int i = 0; i < 50000; i++) {
                integer.getAndIncrement();// 相当于i++操作
            }
        });
        t1.start();
        t2.start();
        // 为了让主线程等待t1线程和t2线程执行完毕
        t1.join();
        t2.join();
        System.out.println(integer);
    }
}
