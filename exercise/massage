class Solution {
    public int massage(int[] nums) {
        int n = nums.length;
        if (n == 0) return 0; 
        // 1.创建dp 表
        // 多开两个位置
        int[] dp = new int[n+2];
        // 2.初始化
        // 不同初始化
        // 3.填表
        // 从第2个下标开始，从左到右
        for (int i = 2; i < n+2;i++) {
            // 先选择当前i位置的预约时间（由于多开了两个位置，注意原来nums数组的映射）
            // 选择了当前i位置，则i-1位置就不能选择了,则i-2位置可以选
            dp[i] = dp[i-2] + nums[i-2];
            // 不选当前i位置的预约时间是dp[i-1]，和上面的值求个最大值就是当前dp[i]的最终值
            dp[i] = Math.max(dp[i-1],dp[i]);
        }
        return dp[n+1];
    }
}
