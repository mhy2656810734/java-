class Solution {
    public int[][] flag = {{1,0},{-1,0},{0,-1},{0,1}};
    public int[][] floodFill(int[][] image, int sr, int sc, int color) {
        // 解题思路：使用dfs或者bfs
        // bfs
        if (image[sr][sc] == color) return image;
        int n = image.length,m = image[0].length;
        Queue<int[]> queue = new LinkedList<>();
        // 记录初始颜色
        int prev = image[sr][sc];
        queue.add(new int[]{sr,sc});
        while (!queue.isEmpty()) {
            int[] t = queue.poll();
            int a = t[0];
            int b = t[1];
            // 修改原来的下标
            image[a][b] = color;
            // 然后找四个方向
            for (int i = 0; i < 4;i++) {
                int x = a + flag[i][0];
                int y = b + flag[i][1];
                if (x >= 0 && x < n && y >= 0 && y < m && image[x][y] == prev) {
                    queue.add(new int[]{x,y});
                }
            }
        }
        return image;
    }
}
