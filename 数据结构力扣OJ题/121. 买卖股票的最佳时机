class Solution {
    public int maxProfit(int[] prices) {
        // if (prices.length <= 1) {
        //     return 0;
        // }
        // int max = 0;
        // int min = prices[0];
        // for (int i = 1; i < prices.length; i++) {
        //     max = Math.max(max,prices[i]-min);// 计算每天利润的最大值
        //     min = Math.min(min,prices[i]);// 得到最小时候买入时机
        // }
        // return max;
        int min = Integer.MAX_VALUE;// 每天的最小价格
        int max = 0;// 记录最大利润
        for (int i = 0; i < prices.length;i++) {
            if (prices[i] < min) {
                // 如果当天的价格小于之前最小的价格计算
                min = prices[i];
            } else if (prices[i] - min > max) {
                // 如果当天的价格 - 最小价格 的利润大于已经记录的最大利润就交换、
                max = prices[i] - min;
            }
        }
        return max;
    }
}


