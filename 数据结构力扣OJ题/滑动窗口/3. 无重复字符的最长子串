class Solution {
       public  int lengthOfLongestSubstring(String s) {
          if (s.length() == 0) {
              return 0;
          }
          // 滑动窗口问题
          HashMap<Character,Integer> map = new HashMap<>();
          int max = 0;// 最后返回的值
          int left = 0;// 作为窗口最下标 动态变化
          for (int i = 0; i < s.length();i++) {
              // 如果里面该字符出现过的话 就需要对left的值进行修改
              if (map.containsKey(s.charAt(i))) {
                  left = Math.max(left,map.get(s.charAt(i))+1);
              }
              map.put(s.charAt(i),i);
              max = Math.max(max,i - left + 1);
          }
          return max;
    }
}
