package sort;

import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.Random;

/**
 * 希尔排序（缩小增量排序）
 * 时间复杂度：O（n^1.3）
 * 空间复杂度O(21)
 * 稳定性：不稳定
 * @author 26568
 * @date 2022-10-14 14:40
 */
public class ShellSortText {
    public static void main(String[] args) {
        int[] arr = {5,9,10,7,3,2,0,20,14,31};
        shellSort(arr);
        System.out.println(Arrays.toString(arr));
        textShellSort();
    }
    public static void shellSort(int[] arr) {
        int gap = arr.length;
        // 当gap（步长） == 1 就是直接插入排序
        while (gap > 1) {
            gap /= 2;
            shell(arr,gap);
        }
    }
    public static void shell(int[] arr,int gap) {
        for (int i = gap;i < arr.length;i++) {
            int j = i - gap;
            int temp = arr[i];
            for (; j >= 0; j -= gap) {
                if (arr[j] > temp) {
                    arr[j+gap] = arr[j];
                } else {
                    break;
                }
            }
            arr[j + gap] = temp;
        }
    }
    public static void textShellSort() {
        int[] arr = new int[100000];
        Random random = new Random();
        for (int i = 0; i < arr.length;i++) {
            arr[i] = random.nextInt();
        }
        long start = System.currentTimeMillis();
        shellSort(arr);
        long end = System.currentTimeMillis();
        System.out.println("希尔排序耗时"+(end - start));
    }
}
